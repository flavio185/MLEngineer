
pipeline {
  agent any
  stages {
    stage('Create/Destroy GKE. ') {
      steps {
        script {
            withCredentials([file(credentialsId: 'GCLOUD_KEY_JSON', 
                          variable: 'GCLOUD_KEY_JSON')]) {
        sh '''
            #Clone project
            git clone https://github.com/flavio185/MLEngineer.git
            cd MLEngineer/GKE/Terraform
            cp $GCLOUD_KEY_JSON MLEngineer/GKE/Terraform/key.json
            if [ -f /var/lib/jenkins/Terraform_Artifacts/terraform.tfstate ]; then
              cp /var/lib/jenkins/Terraform_Artifacts/terraform.tfstate ${WORKSPACE}/MLEngineer/GKE/Terraform/terraform.tfstate
            fi
            #executa terraform
            terraform init && terraform plan && terraform ${FUNCAO} -auto-approve 
            cp ${WORKSPACE}/MLEngineer/GKE/Terraform/terraform.tfstate /var/lib/jenkins/Terraform_Artifacts/create_gke_terraform.tfstate
        '''
          }
        }
      }
      post {
        // Clean after build
        always {
            sh "sudo chmod -R 777 ."
            cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true,
                    notFailBuild: true)
        }
      }
    }
  }
}